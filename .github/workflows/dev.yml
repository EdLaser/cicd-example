name: Development Workflow

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main"]

jobs:
  generate-documentation:
    runs-on: ubuntu-latest
    name: Generate Documentation
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build HTML
        id: adocbuild
        uses: tonynv/asciidoctor-action@master
        with:
          program: "asciidoctor -D . --backend=html5 documentation.adoc"

      - name: Upload HTML Artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation_html
          path: documentation.html

      - name: Build PDF
        uses: avattathil/asciidoctor-action@master
        with:
          program: "asciidoctor-pdf -a allow-uri-read -D . documentation.adoc"

      - name: Upload PDF Artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation_pdf
          path: documentation.pdf

  build:
    runs-on: ubuntu-latest
    needs: generate-documentation
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, "3.10", 3.11]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        working-directory: ./todo-api-python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Image
        uses: docker/build-push-action@v5
        with:
          context: ./todo-api-python
          platforms: linux/amd64,linux/arm64
          tags: todo-api:latest

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, "3.10", 3.11]
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: mysecretuser
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: todos
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        working-directory: ./todo-api-python/app
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Run tests
        working-directory: ./todo-api-python/app
        run: pytest ./unit_tests
        env:
          DATABASE_URL: "postgresql://mysecretuser:mysecretpassword@localhost/todos"

  build-and-push-image:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build Image and push to registry
        uses: docker/build-push-action@v5
        with:
          context: ./todo-api-python
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
