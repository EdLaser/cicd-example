name: Development Workflow

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main"]

jobs:

  generate-documenation:
    runs-on: ubuntu-latest
    name: Generate Documentation
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Build HTML
        id: adocbuild
        uses: tonynv/asciidoctor-action@master
        with:
            program: "asciidoctor -D . --backend=html5 documenation.adoc"
     
      - uses: actions/upload-artifact@v4
        with:
          name: documentation_html
          path: document.html
      
      - name: Build PDF
        uses: avattathil/asciidoctor-action@master
        with:
          program: "asciidoctor-pdf -a allow-uri-read -D . documenation.adoc"

       - name: Upload PDF Artifact
        uses: actions/upload-artifact@v4
        with:
          name: documenation_pdf
          path: documenation.pdf


  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, "3.10", 3.11]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        working-directory: ./todo-api-python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  test:
    runs-on: ubuntu-latest
     strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, "3.10", 3.11]
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: mysecretuser
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: todos
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: pytest
        env:
            DATABASE_URL: "postgresql://mysecretuser:mysecretpassword@localhost/todos"
